{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchFilters.js\";\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nexport default function SearchFilters(props) {\n  const {\n    searchFilters,\n    setSearchFilters\n  } = props;\n\n  const handleChange = e => {\n    console.log(e.target, e.target.value);\n    const input = e.value; // price input must be type Number\n\n    const priceRegex = /^[$0-9][0-9,.]*$/;\n    const isValidNumber = priceRegex.test(input);\n\n    if (isValidNumber) {\n      setSearchFilters(prev => {\n        return { ...prev,\n          [e.id]: input\n        };\n      });\n    }\n  }; // zipcoderadius\n  // beds\n  // baths\n  // sqft\n  // price\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"searchFilterContainer\",\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"filterContainerTitle\",\n      children: \"Filter by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"priceFilter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light\",\n        type: \"button\",\n        \"data-bs-toggle\": \"collapse\",\n        \"data-bs-target\": \"#collapsePriceFilter\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": \"collapsePriceFilter\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse\",\n      id: \"collapsePriceFilter\",\n      children: [/*#__PURE__*/_jsxDEV(NumberFormat, {\n        id: \"priceInputMin\",\n        className: \"priceInput\",\n        isNumericString: \"true\",\n        value: searchFilters.priceInputMin,\n        placeholder: \"Min\",\n        thousandSeparator: true,\n        prefix: '$',\n        inputMode: \"numeric\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \"to\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"priceInputMax\",\n        className: \"priceInput\",\n        value: searchFilters.priceInputMax,\n        type: \"text\",\n        placeholder: \"Max\",\n        onChange: handleChange,\n        thousandSeparator: true,\n        prefix: '$'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"sqftFilter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light\",\n        type: \"button\",\n        \"data-bs-toggle\": \"collapse\",\n        \"data-bs-target\": \"#collapseSqftFilter\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": \"collapseSqftFilter\",\n        children: \"Square Feet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse\",\n      id: \"collapseSqftFilter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sqftInputMin\",\n        className: \"sqftInput\",\n        value: searchFilters.sqftInputMin,\n        type: \"text\",\n        placeholder: \"Min\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), \" to\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sqftInputMax\",\n        className: \"sqftInput\",\n        value: searchFilters.sqftInputMax,\n        type: \"text\",\n        placeholder: \"Max\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = SearchFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilters\");","map":{"version":3,"sources":["/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchFilters.js"],"names":["React","NumberFormat","SearchFilters","props","searchFilters","setSearchFilters","handleChange","e","console","log","target","value","input","priceRegex","isValidNumber","test","prev","id","priceInputMin","priceInputMax","sqftInputMin","sqftInputMax"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NumberFormat from 'react-number-format';\n\nexport default function SearchFilters(props) {\n\n    const { searchFilters, setSearchFilters } = props\n\n    const handleChange = (e) => {\n        console.log( e.target, e.target.value)\n        const input = e.value\n\n        // price input must be type Number\n        const priceRegex = /^[$0-9][0-9,.]*$/\n        const isValidNumber = priceRegex.test(input)\n        if (isValidNumber) {\n            setSearchFilters(prev => {\n                return {\n                    ...prev,\n                    [e.id]: input\n                }\n            })\n        }\n    }\n\n    // zipcoderadius\n    // beds\n    // baths\n    // sqft\n    // price\n\n    return (\n        <div id=\"searchFilterContainer\" className=\"card\">\n            \n            <h3 id=\"filterContainerTitle\">Filter by:</h3>\n            <hr/>\n\n            <p id=\"priceFilter\">\n                <button \n                    className=\"btn btn-light\" \n                    type=\"button\" \n                    data-bs-toggle=\"collapse\" \n                    data-bs-target=\"#collapsePriceFilter\" \n                    aria-expanded=\"false\" \n                    aria-controls=\"collapsePriceFilter\"\n                >\n                    Price\n                </button>\n            </p>\n            <div className=\"collapse\" id=\"collapsePriceFilter\">\n            \n                <NumberFormat \n                    id=\"priceInputMin\" \n                    className=\"priceInput\" \n                    isNumericString=\"true\"\n                    value={searchFilters.priceInputMin} \n                    placeholder=\"Min\"  \n                    thousandSeparator={true} \n                    prefix={'$'} \n                    inputMode=\"numeric\"\n                    onChange={handleChange}\n                />\n                \n                to\n                <input \n                    id=\"priceInputMax\" \n                    className=\"priceInput\" \n                    value={searchFilters.priceInputMax} \n                    type=\"text\" \n                    placeholder=\"Max\" \n                    onChange={handleChange}\n                    thousandSeparator={true} \n                    prefix={'$'}\n                />\n            </div>\n            <hr/>\n\n            <p id=\"sqftFilter\">\n                <button \n                    className=\"btn btn-light\" \n                    type=\"button\" \n                    data-bs-toggle=\"collapse\" \n                    data-bs-target=\"#collapseSqftFilter\" \n                    aria-expanded=\"false\" \n                    aria-controls=\"collapseSqftFilter\"\n                >\n                    Square Feet\n                </button>\n            </p>\n            <div className=\"collapse\" id=\"collapseSqftFilter\">\n                <input id=\"sqftInputMin\" className=\"sqftInput\" value={searchFilters.sqftInputMin} type=\"text\" placeholder=\"Min\" onChange={handleChange}/> to\n                <input id=\"sqftInputMax\" className=\"sqftInput\" value={searchFilters.sqftInputMax} type=\"text\" placeholder=\"Max\" onChange={handleChange}/>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}