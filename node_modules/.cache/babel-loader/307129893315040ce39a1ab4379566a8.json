{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SingleResult from './SingleResult';\nimport { leftArrow, rightArrow } from '../icons/icons';\nexport default function SearchResults(props) {\n  _s();\n\n  const {\n    searchResults,\n    setSearchResults\n  } = props;\n  const [resultGrouping, setResultGrouping] = useState({\n    groups: Number,\n    currentGroup: 1\n  });\n  let resultsOutput = []; // Determine number of result groups\n\n  useEffect(() => {\n    const numberOfGroups = Math.round(searchResults.length / 10);\n    console.log(numberOfGroups);\n    setResultGrouping(prev => {\n      return { ...prev,\n        groups: numberOfGroups\n      };\n    });\n\n    for (let i = resultGroup()[0] - 1; i < resultGroup()[1]; i++) {\n      resultsOutput.push( /*#__PURE__*/_jsxDEV(SingleResult, {\n        result: searchResults[i],\n        index: i\n      }, searchResults[i]._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this));\n    }\n  }, [searchResults]);\n\n  const resultGroup = () => {\n    const {\n      currentGroup,\n      groups\n    } = resultGrouping;\n\n    if (currentGroup < groups) {\n      return [currentGroup * 10 - 9, currentGroup * 10];\n    } else {\n      return [currentGroup * 10 - 9, searchResults.length];\n    }\n  };\n\n  const scrollToTop = () => {\n    document.getElementById('logoBar').scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  const handleLeftArrowClick = e => {\n    scrollToTop();\n    if (resultGrouping.currentGroup === 1) return;\n    setResultGrouping(prev => {\n      return { ...prev,\n        currentGroup: prev.currentGroup - 1\n      };\n    });\n  };\n\n  const handleRightArrowClick = () => {\n    scrollToTop();\n    if (resultGrouping.currentGroup === resultGrouping.groups) return;\n    setResultGrouping(prev => {\n      return { ...prev,\n        currentGroup: prev.currentGroup + 1\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"searchResultsTitle\",\n      children: searchResults.length === 0 ? \"No results...\" : \"Showing results \" + resultGroup()[0] + \"-\" + resultGroup()[1] + \" of \" + searchResults.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: resultsOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), resultGrouping.groups > 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"resultPageNavIcons\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"leftArrow\",\n        className: \"arrowIcon\",\n        onClick: handleLeftArrowClick,\n        children: leftArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"rightArrow\",\n        className: \"arrowIcon\",\n        onClick: handleRightArrowClick,\n        children: rightArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchResults, \"VrcvydXg223KIT48idey0cku9J0=\");\n\n_c = SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchResults.js"],"names":["React","useState","useEffect","SingleResult","leftArrow","rightArrow","SearchResults","props","searchResults","setSearchResults","resultGrouping","setResultGrouping","groups","Number","currentGroup","resultsOutput","numberOfGroups","Math","round","length","console","log","prev","i","resultGroup","push","_id","scrollToTop","document","getElementById","scrollIntoView","behavior","handleLeftArrowClick","e","handleRightArrowClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SingleResult from './SingleResult'\nimport { leftArrow, rightArrow } from '../icons/icons'\n\nexport default function SearchResults(props) {\n\n    const { searchResults, setSearchResults } = props\n\n    const [ resultGrouping, setResultGrouping ] = useState({groups: Number, currentGroup: 1})\n    \n    let resultsOutput = []\n\n    // Determine number of result groups\n    useEffect(() => {\n        const numberOfGroups = Math.round(searchResults.length/10)\n        console.log(numberOfGroups)\n        setResultGrouping(prev => { \n            return {...prev, groups: numberOfGroups}\n        })\n\n        for (let i = resultGroup()[0] - 1; i < resultGroup()[1]; i++) {\n            resultsOutput.push(\n                \n                <SingleResult result={searchResults[i]} index={i} key={searchResults[i]._id}/>\n            )\n        }\n        \n    }, [searchResults])\n    \n    const resultGroup = () => {\n        const { currentGroup, groups} = resultGrouping\n\n        if (currentGroup < groups) {\n            return [currentGroup*10-9, currentGroup*10]\n        } else {\n            return [currentGroup*10-9, searchResults.length]\n        }\n    }\n\n\n    const scrollToTop = () => {\n        document.getElementById('logoBar').scrollIntoView({behavior: 'smooth'})\n    }\n\n    const handleLeftArrowClick = (e) => {\n        \n        scrollToTop()\n        \n        if (resultGrouping.currentGroup === 1) return\n\n        setResultGrouping(prev => {\n            return {\n                ...prev,\n                currentGroup: prev.currentGroup - 1\n            }\n        })\n    }\n\n    const handleRightArrowClick = () => {\n        scrollToTop()\n        \n        if (resultGrouping.currentGroup === resultGrouping.groups) return\n        \n        setResultGrouping(prev => {\n            return {\n                ...prev,\n                currentGroup: prev.currentGroup + 1\n            }\n        })\n    }\n        \n\n    return (\n        <div>\n            <h3 id=\"searchResultsTitle\">\n                {searchResults.length === 0 ? \n                    \"No results...\":\n                    \"Showing results \" + resultGroup()[0] + \"-\" + resultGroup()[1] + \" of \" + searchResults.length\n                }\n            </h3>\n            <div className=\"d-flex flex-wrap\">\n                {resultsOutput}\n            </div>\n            {resultGrouping.groups > 1 ? \n                <span id=\"resultPageNavIcons\">\n                    <span id=\"leftArrow\" className=\"arrowIcon\" onClick={handleLeftArrowClick}>{leftArrow}</span>\n                    <span id=\"rightArrow\" className=\"arrowIcon\" onClick={handleRightArrowClick}>{rightArrow}</span>\n                </span>:\n                null            \n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}