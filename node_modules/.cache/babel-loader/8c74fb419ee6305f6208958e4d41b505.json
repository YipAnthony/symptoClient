{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SingleResult from './SingleResult';\nexport default function SearchResults(props) {\n  _s();\n\n  const {\n    searchResults,\n    setSearchResults\n  } = props;\n  const [resultGrouping, setResultGrouping] = useState({\n    groups: Number,\n    currentGroup: 1\n  }); // Determine number of result groups\n\n  useEffect(() => {\n    const numberOfGroups = Math.round(searchResults.length / 10);\n    setResultGrouping(prev => {\n      return { ...prev,\n        groups: numberOfGroups\n      };\n    });\n  }, [searchResults]);\n\n  const resultGroup = () => {\n    const {\n      currentGroup,\n      groups\n    } = resultGrouping;\n\n    if (currentGroup < groups) {\n      return [currentGroup * 10 - 9, currentGroup * 10];\n    } else {\n      return [currentGroup * 10 - 9, searchResults.length];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"searchResultsTitle\",\n      children: searchResults.length === 0 ? \"No results, try widening your search\" : \"Showing results\" + resultGroup()[0] + \"-\" + resultGroup()[1] + \"of\" + searchResults.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), searchResults.map((result, index) => {\n      return /*#__PURE__*/_jsxDEV(SingleResult, {\n        result: result,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchResults, \"VrcvydXg223KIT48idey0cku9J0=\");\n\n_c = SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/home/anthony/PersonalProjects/sympto-street/client/src/components/SearchResults.js"],"names":["React","useState","useEffect","SingleResult","SearchResults","props","searchResults","setSearchResults","resultGrouping","setResultGrouping","groups","Number","currentGroup","numberOfGroups","Math","round","length","prev","resultGroup","map","result","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAEzC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCF,KAA5C;AAEA,QAAM,CAAEG,cAAF,EAAkBC,iBAAlB,IAAwCR,QAAQ,CAAC;AAACS,IAAAA,MAAM,EAAEC,MAAT;AAAiBC,IAAAA,YAAY,EAAE;AAA/B,GAAD,CAAtD,CAJyC,CAMzC;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWT,aAAa,CAACU,MAAd,GAAqB,EAAhC,CAAvB;AACAP,IAAAA,iBAAiB,CAACQ,IAAI,IAAI;AACtB,aAAO,EAAC,GAAGA,IAAJ;AAAUP,QAAAA,MAAM,EAAEG;AAAlB,OAAP;AACH,KAFgB,CAAjB;AAGH,GALQ,EAKN,CAACP,aAAD,CALM,CAAT;;AAOA,QAAMY,WAAW,GAAG,MAAM;AACtB,UAAM;AAAEN,MAAAA,YAAF;AAAgBF,MAAAA;AAAhB,QAA0BF,cAAhC;;AAEA,QAAII,YAAY,GAAGF,MAAnB,EAA2B;AACvB,aAAO,CAACE,YAAY,GAAC,EAAb,GAAgB,CAAjB,EAAoBA,YAAY,GAAC,EAAjC,CAAP;AACH,KAFD,MAEO;AACH,aAAO,CAACA,YAAY,GAAC,EAAb,GAAgB,CAAjB,EAAoBN,aAAa,CAACU,MAAlC,CAAP;AACH;AACJ,GARD;;AAUA,sBACI;AAAA,4BACI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAAA,gBACKV,aAAa,CAACU,MAAd,KAAyB,CAAzB,GACG,sCADH,GAEG,oBAAoBE,WAAW,GAAG,CAAH,CAA/B,GAAuC,GAAvC,GAA6CA,WAAW,GAAG,CAAH,CAAxD,GAAgE,IAAhE,GAAuEZ,aAAa,CAACU;AAH7F;AAAA;AAAA;AAAA;AAAA,YADJ,EAQMV,aAAa,CAACa,GAAd,CAAmB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,0BAAO,QAAC,YAAD;AAAc,QAAA,MAAM,EAAED,MAAtB;AAA8B,QAAA,KAAK,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFC,CARN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvCuBjB,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SingleResult from './SingleResult'\n\nexport default function SearchResults(props) {\n\n    const { searchResults, setSearchResults } = props\n\n    const [ resultGrouping, setResultGrouping ] = useState({groups: Number, currentGroup: 1})\n    \n    // Determine number of result groups\n    useEffect(() => {\n        const numberOfGroups = Math.round(searchResults.length/10)\n        setResultGrouping(prev => { \n            return {...prev, groups: numberOfGroups}\n        })\n    }, [searchResults])\n\n    const resultGroup = () => {\n        const { currentGroup, groups} = resultGrouping\n\n        if (currentGroup < groups) {\n            return [currentGroup*10-9, currentGroup*10]\n        } else {\n            return [currentGroup*10-9, searchResults.length]\n        }\n    }\n\n    return (\n        <div>\n            <h3 id=\"searchResultsTitle\">\n                {searchResults.length === 0 ? \n                    \"No results, try widening your search\":\n                    \"Showing results\" + resultGroup()[0] + \"-\" + resultGroup()[1] + \"of\" + searchResults.length\n                }\n            </h3>\n            \n            { searchResults.map( (result, index) => {\n                return <SingleResult result={result} index={index}/>\n            })}\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}